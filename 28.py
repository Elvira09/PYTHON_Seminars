# 28. Найти корни квадратного уравнения Ax² + Bx + C = 0
# - Математикой
# - Используя дополнительные библиотеки*
    
    # Дискриминант D = b^2 − 4ac :
    #     если D = 0, есть один корень: х = −b/2*a
    #     если D > 0, есть два корня: x1 = (-b - d^0.5)/(2*a) и x2 = (-b + d^0.5)/(2*a)
    #     если D < 0, корней нет;
import math


print("Для уравнения: Ax^2 + Bx + C = 0")
a = float(input('введите A: '))
# a!=0 - обязательное условия для квадратного уравнения, иначе оно переходит просто в линейное
if a == 0: 
	print('Некорретный ввод значения:  A должно быть числом и не равно нулю')
	a = float(input('введите A: '))
b = float(input('введите B: '))
c = float(input('введите C: '))

dis = b * b - 4 * a * c
print(dis, ' - дискриминант')

print('\nВариант - математика:')
if dis == 0:
    х = (-b) / (2 * a)
    print(f'x = {х}')
elif dis > 0:
    x1 = (-b - dis ** 0.5) / (2 * a)  
    x2 = (-b + dis ** 0.5) / (2 * a)
    print(f'x1 = {x1}, x2 = {x2}')
else:
    print("Корней нет")

print('\nВариант - дополнительные библиотеки:')
if dis == 0:
    хb = (-b) / (2 * a)
    print(f'x = {round(хb, 2)}')
elif dis > 0:
    xb1 = (-b - math.sqrt(dis)) / (2 * a)  
    xb2 = (-b + math.sqrt(dis)) / (2 * a)
    print(f'x1 = {round(xb1, 2)}, x2 = {round(xb2, 2)}')
else:
    print("Корней нет")

